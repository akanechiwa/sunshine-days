#!/bin/bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

clear
echo -e "${BLUE}#################################################${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}# Project 'pterodactyl-theme-installer'         #${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}# Copyright (C) 2024, @akane_chiwa,             #${NC}"
echo -e "${BLUE}# akanechiwa.ch@gmail.com                       #${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}# This program is free software: you can        #${NC}"
echo -e "${BLUE}# redistribute it and/or modify it under the    #${NC}"
echo -e "${BLUE}# terms of the GNU General Public License       #${NC}"
echo -e "${BLUE}# as published by the Free Software Foundation, #${NC}"
echo -e "${BLUE}# either version 3 of the License, or (at       #${NC}"
echo -e "${BLUE}# your option) any later version.               #${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}# This program is distributed in the hope       #${NC}"
echo -e "${BLUE}# that it will be useful, but WITHOUT ANY       #${NC}"
echo -e "${BLUE}# WARRANTY; without even the implied warranty   #${NC}"
echo -e "${BLUE}# of MERCHANTABILITY or FITNESS FOR A           #${NC}"
echo -e "${BLUE}# PARTICULAR PURPOSE.  See the GNU General      #${NC}"
echo -e "${BLUE}# Public License for more details.              #${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}# You should have received a copy of the GNU    #${NC}"
echo -e "${BLUE}# General Public License along with this        #${NC}"
echo -e "${BLUE}# program.  If not, see <https://www.gnu.org    #${NC}"
echo -e "${BLUE}# /licenses/>.                                  #${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}# This script is not associated with the        #${NC}"
echo -e "${BLUE}# official Pterodactyl Project.                 #${NC}"
echo -e "${BLUE}# https://github.com/aiprojectchiwa/            #${NC}"
echo -e "${BLUE}# pterodactylthemeautoinstaller                 #${NC}"
echo -e "${BLUE}#                                               #${NC}"
echo -e "${BLUE}#################################################${NC}"

echo -e "${YELLOW}Loading script by @akane_chiwa...${NC}"
for i in $(seq 0 10 100); do
  echo -ne "Loading... $i%\r"
  sleep 0.2
done
echo -ne "\n"

clear
echo -e "${GREEN}[INFO] Updating package list...${NC}"
sudo apt update > /dev/null 2>&1

clear
echo -e "${GREEN}[INFO] Installing required packages...${NC}"
sudo apt install -y jq python3-pip > /dev/null 2>&1

clear
echo -e "${GREEN}[INFO] Installing gdown...${NC}"
pip3 install gdown > /dev/null 2>&1

clear
echo -e "${GREEN}[INFO] Dependencies installed successfully.${NC}"

TOKEN_VERIFICATION_URL="https://api.jsonbin.io/v3/b/66c43101ad19ca34f8987012?meta=false"

echo -e "${YELLOW}Please enter your token: ${NC}"
read -r USER_TOKEN

RESPONSE=$(curl -s "$TOKEN_VERIFICATION_URL")
VALID_TOKEN=$(echo "$RESPONSE" | jq -r .token)

if [ "$USER_TOKEN" != "$VALID_TOKEN" ]; then
  echo -e "${RED}Invalid token. Exiting...${NC}"
  exit 1
else
  echo -e "${GREEN}Valid token. Proceeding...${NC}"
  echo -e "${YELLOW}Loading...${NC}"
  for i in $(seq 0 10 100); do
    echo -ne "Loading... $i%\r"
    sleep 0.1
  done
  echo -ne "\n"
fi

clear
echo -e "${YELLOW}Select an option:${NC}"
echo "1. Install theme"
echo "2. Uninstall theme"
echo -e "${YELLOW}Enter your choice (1 or 2): ${NC}"
read -r MENU_CHOICE

SNAPSHOT_FILE="/var/tmp/chiwa_snapshot_name"

install_theme() {
  clear
  if [ ! -d /var/www/pterodactyl ]; then
    echo -e "${RED}Please install the panel first.${NC}"
    exit 1
  fi

  echo -e "${YELLOW}Do you want to create a Timeshift snapshot for later uninstall? (y/n): ${NC}"
  read -r CREATE_SNAPSHOT
  if [ "$CREATE_SNAPSHOT" == "y" ]; then
    clear
    echo -e "${GREEN}[INFO] Installing Timeshift...${NC}"
    sudo apt install -y timeshift > /dev/null 2>&1

    clear
    echo -e "${GREEN}[INFO] Creating snapshot...${NC}"
    sudo timeshift --create --comments "Backup before theme installation" --tags D > /dev/null 2>&1

    SNAPSHOT_NUM=$(sudo timeshift --list | grep -E "Backup before theme installation" | head -1 | awk '{print $1}')
    echo "$SNAPSHOT_NUM" > "$SNAPSHOT_FILE"
  fi

  clear
  echo -e "${YELLOW}Select theme to install:${NC}"
  echo "1. Stellar"
  echo "2. Enigma"
  echo -e "${YELLOW}Enter your choice (1 or 2): ${NC}"
  read -r THEME_CHOICE

  case "$THEME_CHOICE" in
    1)
      gdown https://drive.google.com/uc?id=1brBpgLaTDeg0HIKEGDYnploTiemBxI_c -O stellar.zip
      clear
      echo -e "${GREEN}[INFO] Extracting Stellar theme...${NC}"
      sudo unzip -o stellar.zip > /dev/null 2>&1
      ;;
    2)
      gdown https://drive.google.com/uc?id=1FECuDNqTw5NDKxoQJDvcDbPaQ9xXitPH -O enigma.zip
      clear
      echo -e "${GREEN}[INFO] Extracting Enigma theme...${NC}"
      sudo unzip -o enigma.zip > /dev/null 2>&1

      clear
      echo -e "${GREEN}[INFO] Replacing placeholders in Enigma theme...${NC}"
      echo -e "${YELLOW}Enter link for 'LINK_BC_BOT': ${NC}"
      read -r LINK_BC_BOT
      echo -e "${YELLOW}Enter name for 'NAMA_OWNER_PANEL': ${NC}"
      read -r NAMA_OWNER_PANEL
      echo -e "${YELLOW}Enter link for 'LINK_GC_INFO': ${NC}"
      read -r LINK_GC_INFO
      echo -e "${YELLOW}Enter link for 'LINKTREE_KALIAN': ${NC}"
      read -r LINKTREE_KALIAN

      sudo sed -i "s|LINK_BC_BOT|$LINK_BC_BOT|g" /root/enigma-main/*
      sudo sed -i "s|NAMA_OWNER_PANEL|$NAMA_OWNER_PANEL|g" /root/enigma-main/*
      sudo sed -i "s|LINK_GC_INFO|$LINK_GC_INFO|g" /root/enigma-main/*
      sudo sed -i "s|LINKTREE_KALIAN|$LINKTREE_KALIAN|g" /root/enigma-main/*
      ;;
    *)
      echo -e "${RED}Invalid choice. Exiting...${NC}"
      exit 1
      ;;
  esac

  clear
  echo -e "${GREEN}[INFO] Copying theme files to Pterodactyl...${NC}"
  sudo cp -r /root/enigma-main/* /var/www/pterodactyl/ > /dev/null 2>&1

  clear
  echo -e "${GREEN}[INFO] Running theme installation commands...${NC}"

  curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash - > /dev/null 2>&1
  sudo apt install -y nodejs > /dev/null 2>&1

  clear
  echo -e "${GREEN}[INFO] Installing global npm packages...${NC}"
  npm i -g yarn > /dev/null 2>&1

  clear
  echo -e "${GREEN}[INFO] Installing Pterodactyl theme dependencies...${NC}"
  cd /var/www/pterodactyl
  yarn > /dev/null 2>&1
  yarn add react-feather > /dev/null 2>&1

  clear
  echo -e "${GREEN}[INFO] Theme installation completed successfully.${NC}"
}

uninstall_theme() {
  clear
  if [ ! -d /var/www/pterodactyl ]; then
    echo -e "${RED}Please install the panel first.${NC}"
    exit 1
  fi

  echo -e "${YELLOW}Do you want to restore from Timeshift snapshot? (y/n): ${NC}"
  read -r RESTORE_SNAPSHOT
  if [ "$RESTORE_SNAPSHOT" == "y" ]; then
    clear
    SNAPSHOT_NUM=$(cat "$SNAPSHOT_FILE")
    echo -e "${GREEN}[INFO] Restoring snapshot...${NC}"
    sudo timeshift --restore --snapshot "$SNAPSHOT_NUM" --yes > /dev/null 2>&1
  fi

  clear
  echo -e "${GREEN}[INFO] Removing theme files from Pterodactyl...${NC}"
  sudo rm -rf /var/www/pterodactyl/* > /dev/null 2>&1

  clear
  echo -e "${GREEN}[INFO] Uninstallation completed successfully.${NC}"
}

case "$MENU_CHOICE" in
  1) install_theme ;;
  2) uninstall_theme ;;
  *) echo -e "${RED}Invalid choice. Exiting...${NC}"; exit 1 ;;
esac
