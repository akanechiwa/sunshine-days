#!/bin/bash

# Warna dan Font
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color
BOLD='\033[1m'

# File log
LOG_FILE="/root/chiwa.log"

# Fungsi untuk memblokir Ctrl+C saat proses kritis
block_ctrl_c() {
    trap 'echo -e "\n${RED}Silahkan tunggu proses ini selesai...${NC}"' SIGINT
}

# Fungsi untuk mengembalikan pengaturan Ctrl+C ke default
unblock_ctrl_c() {
    trap - SIGINT
}

# Instalasi Font dan Dependencies
install_fonts_and_dependencies() {
    show_frame "Menginstall Bahan"
    show_loading
    sudo apt update -y >> "$LOG_FILE" 2>&1
    sudo apt install -y toilet figlet openssl bzip2 python3-pip >> "$LOG_FILE" 2>&1
    pip3 install gdown >> "$LOG_FILE" 2>&1
}

# Fungsi untuk verifikasi ukuran layar
verify_screen_size() {
    local min_width=70
    local min_height=20
    local current_width=$(tput cols)
    local current_height=$(tput lines)

    if [ "$current_width" -lt "$min_width" ] || [ "$current_height" -lt "$min_height" ]; then
        echo -e "${RED}${BOLD}Layar anda terlalu kecil. Ukuran minimum adalah ${min_width}x${min_height}.${NC}"
        exit 1
    fi
}

# Fungsi untuk menampilkan teks dengan toilet dan memberikan kredit
show_intro() {
    clear
    local width=70  # Lebar bingkai
    echo -e "${PURPLE}${BOLD}$(printf '%.0s' $(seq 1 $width))${NC}"
    echo -e "${CYAN}"
    toilet -f mono12 -F border --metal "  @akane_chiwa" | while IFS= read -r line; do
        printf "${PURPLE}${BOLD}%s${NC}\n" "$(printf "%-*s" $((width - 2)) "$line")"
    done
    echo -e "${PURPLE}${BOLD}$(printf '%.0s' $(seq 1 $width))${NC}"
    echo -e "${CYAN}${BOLD}pterodactylthemeautoinstaller${NC}"
    echo -e "${PURPLE}${BOLD}$(printf '%.0s' $(seq 1 $width))${NC}"
}

# Meminta user untuk memasukkan token API
request_token() {
    local width=70
    echo -e "${PURPLE}${BOLD}$(printf '%.0s' $(seq 1 $width))${NC}"
    echo -e "${RED}${BOLD}SILAHKAN MASUKKAN TOKEN: ${NC}"
    read -r INPUT_TOKEN
    if [ -z "$INPUT_TOKEN" ]; then
        echo -e "${RED}Token tidak boleh kosong!${NC}"
        exit 1
    fi
    echo -e "${PURPLE}${BOLD}$(printf '%.0s' $(seq 1 $width))${NC}"
}

# Fungsi untuk verifikasi token API dengan mencocokkan input
verify_api() {
    show_frame "VERIFIKASI API"
    show_loading
    
    response=$(curl -s https://api.jsonbin.io/v3/b/66c43101ad19ca34f8987012?meta=false)
    RETRIEVED_TOKEN=$(echo "$response" | jq -r '.token')

    if [ "$INPUT_TOKEN" == "$RETRIEVED_TOKEN" ]; then
        echo -e "${GREEN}VERIFIKASI BERHASIL TOKEN COCOK.${NC}"
    else
        echo -e "${RED}Verifikasi gagal! Token tidak cocok.${NC}"
        exit 1
    fi
}

# Fungsi untuk menampilkan bingkai dan keterangan dengan teks berada di tengah
show_frame() {
    clear
    sleep 0.7
    local text="$1"
    local toilet_text=$(toilet -f smblock -F border --width=70 "$text")
    echo -e "${PURPLE}${BOLD}$toilet_text${NC}"
}

# Fungsi untuk animasi loading dengan persentase dan simbol █ serta ▒
show_loading() {
    echo -ne "${BLUE}${BOLD}Loading... 0% 《$(printf '░%.0s' {1..40})》${NC}\r"
    for i in {1..100}; do
        sleep 0.05
        filled=$((i * 40 / 100))
        unfilled=$((40 - filled))
        if [ "$i" -eq 100 ]; then
            PROGRESS_BAR=$(printf '█%.0s' {1..40})
        else
            PROGRESS_BAR=$(printf '█%.0s' $(seq 1 $filled))$(printf '░%.0s' $(seq 1 $unfilled))
        fi
        echo -ne "${BLUE}${BOLD}Loading... $i% 《${PROGRESS_BAR}》${NC}\r"
    done
    echo -ne "\n"
}

# Menjalankan proses instalasi dengan bingkai dan animasi
install_theme() {
    show_frame "MENDOWNLOAD DEPENDENSI"
    show_loading
    curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash - >> "$LOG_FILE" 2>&1

    show_frame "MEMERIKSA IZIN"
    show_loading
    sudo apt install -y nodejs >> "$LOG_FILE" 2>&1

    show_frame "MENUNGGU RESPON SERVER"
    show_loading
    sudo npm install -g yarn >> "$LOG_FILE" 2>&1

    show_frame "MENGINSTALL 1/5"
    cd /var/www/pterodactyl || exit
    show_loading
    yarn >> "$LOG_FILE" 2>&1

    show_frame "MENGINSTALL 2/5"
    show_loading
    yarn add react-feather >> "$LOG_FILE" 2>&1

    show_frame "MENGINSTALL 3/5"
    show_loading
    php artisan migrate --force >> "$LOG_FILE" 2>&1

    show_frame "MENGINSTALL 4/5"
    show_loading
    yarn build:production >> "$LOG_FILE" 2>&1

    show_frame "MEMBERSIHKAN INSTALLASI"
    show_loading
    php artisan view:clear >> "$LOG_FILE" 2>&1

    show_frame "Install Tema selesai"
    credit_chiwa
}

# Fungsi untuk mengganti placeholder pada tema Enigma
replace_placeholders_enigma() {
    show_frame "Mengganti placeholder pada tema Enigma"
    show_loading
    sudo sed -i "s|LINK_BC_BOT|$LINK_BC_BOT|g" /var/www/pterodactyl/resources/scripts/components/dashboard/DashboardContainer.tsx >> "$LOG_FILE" 2>&1
    sudo sed -i "s|NAMA_OWNER_PANEL|$NAMA_OWNER_PANEL|g" /var/www/pterodactyl/resources/scripts/components/dashboard/DashboardContainer.tsx >> "$LOG_FILE" 2>&1
    sudo sed -i "s|LINK_GC_INFO|$LINK_GC_INFO|g" /var/www/pterodactyl/resources/scripts/components/dashboard/DashboardContainer.tsx >> "$LOG_FILE" 2>&1
    sudo sed -i "s|LINKTREE_KALIAN|$LINKTREE_KALIAN|g" /var/www/pterodactyl/resources/scripts/components/dashboard/DashboardContainer.tsx >> "$LOG_FILE" 2>&1
}

# Fungsi untuk mengunduh file dengan gdown tanpa enkripsi
secure_download() {
    local url="$1"
    local output_file="$2"

    show_frame "MENDOWNLOAD TEMA"
    show_loading

    # Unduh file dari Google Drive menggunakan gdown
    gdown "$url" -O "$output_file" >> "$LOG_FILE" 2>&1

    # Periksa apakah file diunduh dengan benar
    if [ ! -f "$output_file" ]; then
        echo -e "${RED}Pengunduhan gagal: File tidak ditemukan.${NC}" >> "$LOG_FILE"
        exit 1
    fi
}

# Fungsi untuk memeriksa dan memperbaiki file ZIP yang corrupt
check_and_fix_zip() {
    local zip_file="$1"

    # Cek apakah file ZIP valid
    if ! unzip -t "$zip_file" &>/dev/null; then
        echo -e "${RED}File ZIP corrupt atau tidak valid.${NC}"
        exit 1
    fi
}

# Fungsi utama untuk mengatur eksekusi skrip
main() {
    block_ctrl_c
    install_fonts_and_dependencies
    verify_screen_size
    show_intro
    request_token
    verify_api

    show_frame "Pilih Tema untuk Diinstall"
    echo -e "${YELLOW}${BOLD}1. Stellar${NC}"
    echo -e "${YELLOW}${BOLD}2. Enigma${NC}"
    echo -e "${YELLOW}${BOLD}Masukkan pilihan (1 atau 2): ${NC}"
    read -r THEME_CHOICE

    case $THEME_CHOICE in
        1)
            secure_download "https://drive.google.com/uc?id=XXXX" "/var/www/pterodactyl/stellar.zip"
            check_and_fix_zip "/var/www/pterodactyl/stellar.zip"
            show_frame "Mengekstrak tema Stellar"
            sudo unzip -o "/var/www/pterodactyl/stellar.zip" -d /var/www/pterodactyl/ >> "$LOG_FILE" 2>&1
            ;;
        2)
            secure_download "https://drive.google.com/uc?id=YYYY" "/var/www/pterodactyl/enigma.zip"
            check_and_fix_zip "/var/www/pterodactyl/enigma.zip"
            show_frame "Mengekstrak tema Enigma"
            sudo unzip -o "/var/www/pterodactyl/enigma.zip" -d /var/www/pterodactyl/ >> "$LOG_FILE" 2>&1
            replace_placeholders_enigma
            ;;
        *)
            echo -e "${RED}Pilihan tidak valid! Silakan coba lagi.${NC}"
            exit 1
            ;;
    esac

    install_theme
    unblock_ctrl_c
}

# Memulai eksekusi
main
